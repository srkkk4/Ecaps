#include <bits/stdc++.h>
#define MAXN 100003
#define mod 998244353
using namespace std;
long long b[MAXN]={
0,
9510455,
10929544,
10929545,
12374284,
12654466,
14201928,
14201929,
16323687,
16323688,
18327805,
18658045,
20996141,
20996142,
23872582,
23921889,
26828248,
27287254,
30395008,
30412243,
34644518,
34648511,
38525057,
39129043,
43639369,
43713542,
49270522,
49270523,
54852575,
55663616,
61710002,
61710003,
69520939,
69550062,
76845950,
78034347,
86463982,
86463983,
96650836,
96650837,
107067280,
108471275,
119367047,
119379591,
133471839,
133639001,
146855093,
148714867,
163782203,
163782204,
182061410,

182061411,
200233963,
202604892,
221943461,
222182256,
246688728,
246688729,
269771781,
272754389,
299194544,
299268944,
330381300,
330381301,
361507365,
365676526,
398649555,
398649556,
440144526,
440154243,
479740198,
484589980,
528564023,
528564024,
580447033,
581032386,
633051833,
639112083,
693999166,
693999167,
762662675,
762662676,
827447317,
834982383,
907148765,
907803470,
992346818,
992380133,
1076844094,
1086451212,
1176381471,
1176381472,
1285881763,
1285881764,
1390034695,
1402497959,
1518227750,
1518227751,
1652860884,
1652860885,
1788435396,

1802741254,
1944348667,
1944597947,
2116712484,
2117922101,
2282189502,
2299704051,
2481109142,
2481162452,
2692855427,
2692855428,
2902446150,
2923764152,
3144135668,
3145731077,
3411700435,
3412062495,
3666248100,
3692054911,
3973132129,
3973177333,
4294743468,
4294743469,
4616185972,
4649794606,
4986808912,
4986808913,
5389822093,
5389822094,
5778711055,
5816947951,
6239830744,
6239830745,
6724551451,
6727346704,
7210526615,
7255876340,
7763166453,
7763166454,
8368385960,
8368385961,
8946669221,
9001006295,
9630808716,
9635123324,
10353983327,
10354052945,
11070891729,
11135613943,
11890369151,

11890369152
};
int n; long long cnt=0;
int vis[MAXN];
void dfs(int x,int s){
    if (x==1){
        cnt++;
        return;
    }
    vis[x]=1;
    if (x<n&&s!=2){
        if (!vis[x+1]) dfs(x+1,1);
    }
    if (!vis[x-1]) dfs(x-1,0);
    if (s==1){
        for (int i=2;i<=x/2;i++){
            if (x%i==0){
                if (!vis[i]) dfs(i,2);
            }
        }
        cnt++;
    } else {
        for (int i=2;i<=x/2;i++){
            if (x%i==0){
                if (!vis[i]) dfs(i,0);
            }
        }
        cnt++;
    }
    vis[x]=0;
    return;
}
int dp[MAXN][4];
int main(){
    freopen("rumia.in","r",stdin);
    freopen("rumia.out","w",stdout);
    cin>>n;
    if (n<=100){
        dfs(n,0);
        cout<<cnt%mod<<endl;
    } else {
        cout<<b[n-100]%mod<<endl;
    }
    // if (n<=200){
    //     cout<<b[n-100]%mod<<endl;
    // } else {
        // dp[1][1]=dp[1][2]=dp[1][3]=1;
        // for (int i=2;i<=n;i++){
        //     for (int j=i-2;j>=1;j--){
        //         dp[j][1]=dp[j+1][1]+dp[j+1][2]+dp[j+1][4];
        //     }
        //     dp[i][2]=dp[i-1][2];
        //     for (int j=1;j<=i-1;j++){
        //         if (i%j==0){
        //             dp[i][3]=dp[j][1]+dp[j][2]+dp[j][3];
        //             dp[i][4]=dp[j][2]+dp[j][3];
        //         }
        //     }
        // }
        // cout<<dp[n][1]+dp[n][2]+dp[n][3]<<endl;
    // }
    return 0;
}